import {
  addListener,
  gestures,
  removeListener
} from "./chunk-ZB6KQ55W.js";
import "./chunk-CQH3N2QY.js";
import "./chunk-TWLJ45QX.js";

// node_modules/@vaadin/flow-frontend/contextMenuTargetConnector.js
(function() {
  function tryCatchWrapper(callback) {
    return window.Vaadin.Flow.tryCatchWrapper(callback, "Vaadin Context Menu Target");
  }
  function init(target) {
    if (target.$contextMenuTargetConnector) {
      return;
    }
    target.$contextMenuTargetConnector = {
      openOnHandler: tryCatchWrapper(function(e) {
        e.preventDefault();
        e.stopPropagation();
        this.$contextMenuTargetConnector.openEvent = e;
        let detail = {};
        if (target.getContextMenuBeforeOpenDetail) {
          detail = target.getContextMenuBeforeOpenDetail(e);
        }
        target.dispatchEvent(
          new CustomEvent("vaadin-context-menu-before-open", {
            detail
          })
        );
      }),
      updateOpenOn: tryCatchWrapper(function(eventType) {
        this.removeListener();
        this.openOnEventType = eventType;
        customElements.whenDefined("vaadin-context-menu").then(
          tryCatchWrapper(() => {
            if (gestures[eventType]) {
              addListener(target, eventType, this.openOnHandler);
            } else {
              target.addEventListener(eventType, this.openOnHandler);
            }
          })
        );
      }),
      removeListener: tryCatchWrapper(function() {
        if (this.openOnEventType) {
          if (gestures[this.openOnEventType]) {
            removeListener(target, this.openOnEventType, this.openOnHandler);
          } else {
            target.removeEventListener(this.openOnEventType, this.openOnHandler);
          }
        }
      }),
      openMenu: tryCatchWrapper(function(contextMenu) {
        contextMenu.open(this.openEvent);
      }),
      removeConnector: tryCatchWrapper(function() {
        this.removeListener();
        target.$contextMenuTargetConnector = void 0;
      })
    };
  }
  window.Vaadin.Flow.contextMenuTargetConnector = {
    init(...args) {
      return tryCatchWrapper(init)(...args);
    }
  };
})();
//# sourceMappingURL=@vaadin_flow-frontend_contextMenuTargetConnector__js.js.map
